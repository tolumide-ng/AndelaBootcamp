{"version":3,"sources":["../../server/test/meetupsTests.js"],"names":["should","chai","describe","it","done","server","get","set","expect","post","theLength"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,SAASC,eAAKD,MAAL,EAAf;;AAEAE,SAAS,4BAAT,EAAuC,YAAM;AAC3C;AACAC,KAAG,2CAAH,EAAgD,UAACC,IAAD,EAAU;AACxD,6BAAQC,aAAR,EACGC,GADH,CACO,iBADP,EAEGC,GAFH,CAEO,QAFP,EAEiB,kBAFjB,EAGGC,MAHH,CAGU,cAHV,EAG0B,MAH1B,EAIGA,MAJH,CAIU,GAJV,EAIeJ,IAJf;AAKD,GAND;;AAQA;AACAD,KAAG,+EAAH,EAAoF,UAACC,IAAD,EAAU;AAC5F,6BAAQC,aAAR,EACGI,IADH,CACQ,iBADR,EAEGF,GAFH,CAEO,QAFP,EAEiB,kBAFjB,EAGGC,MAHH,CAGU,cAHV,EAG0B,MAH1B,EAIGA,MAJH,CAIU,GAJV,EAIeJ,IAJf;AAKD,GAND;;AAQA;AACAD,KAAG,qDAAH,EAA0D,UAACC,IAAD,EAAU;AAClE,6BAAQC,aAAR,EACGC,GADH,CACO,oBADP,EAEGE,MAFH,CAEU,GAFV,EAEeJ,IAFf;AAGD,GAJD;;AAMA;AACAD,KAAG,2CAAH,EAAgD,UAACC,IAAD,EAAU;AACxD,6BAAQC,aAAR,EACGC,GADH,CACO,kBADP,EAEGC,GAFH,CAEO,EAAEG,WAAW,CAAb,EAFP,EAGGF,MAHH,CAGU,GAHV,EAGeJ,IAHf;AAID,GALD;;AAOAD,KAAG,sDAAH,EAA2D,UAACC,IAAD,EAAU;AACnE,6BAAQC,aAAR,EACGC,GADH,CACO,wBADP,EAEGE,MAFH,CAEU,GAFV,EAEeJ,IAFf,EAGGI,MAHH,CAGU,cAHV,EAG0B,MAH1B;AAID,GALD;AAMD,CAxCD","file":"meetupsTests.js","sourcesContent":["import chai from 'chai';\nimport request from 'supertest';\nimport server from '../app';\n\nconst should = chai.should();\n\ndescribe('#MEETUPS rquest to meetups', () => {\n  // GET request to all meetups\n  it('should return 404 if there are no meetups', (done) => {\n    request(server)\n      .get('/api/v1/meetups')\n      .set('Accept', 'application/json')\n      .expect('Content-Type', /json/)\n      .expect(404, done);\n  });\n\n  // Create meetups\n  it('should return 422 if all required parameters are not supplied is not supplied', (done) => {\n    request(server)\n      .post('/api/v1/meetups')\n      .set('Accept', 'application/json')\n      .expect('Content-Type', /json/)\n      .expect(422, done);\n  });\n\n  // find a specific meetup\n  it('should return 404 if specific meetup does not exist', (done) => {\n    request(server)\n      .get('/api/v1/:meetupsId')\n      .expect(404, done);\n  });\n\n  // Upcoming meetups\n  it('should return 404 if there are no meetups', (done) => {\n    request(server)\n      .get('/api/v1/upcoming')\n      .set({ theLength: 0 })\n      .expect(404, done);\n  });\n\n  it('should return 404 if no user has rsvps for the event', (done) => {\n    request(server)\n      .get('/api/v1/74550289/rsvps')\n      .expect(404, done)\n      .expect('Content-Type', /html/);\n  });\n});\n"]}