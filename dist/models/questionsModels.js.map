{"version":3,"sources":["../../server/models/questionsModels.js"],"names":["Question","questions","requestBody","meetupExist","meetupsModels","getOne","meetupId","userExist","userModel","findUser","userId","theQuestion","questionId","uuid","v4","createdOn","moment","now","createdBy","title","body","vote","push","idOfRequestedQuestion","find","question","theUpvotedQuestion","findQ","theDownvotedQuestion"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;IAGMA,Q;AACJ,sBAAc;AAAA;;AACZ,SAAKC,SAAL,GAAiB,EAAjB;AACD;;;;gCAEWC,W,EAAa;AACvB,UAAMC,cAAcC,wBAAcC,MAAd,CAAqBH,YAAYI,QAAjC,CAApB;AACA,UAAMC,YAAYC,sBAAUC,QAAV,CAAmBP,YAAYQ,MAA/B,CAAlB;AACA,UAAMC,cAAc;AAClBC,oBAAYC,eAAKC,EAAL,EADM;AAElBC,mBAAWC,iBAAOC,GAAP,EAFO;AAGlBC,mBAAWX,UAAUG,MAHH;AAIlBJ,kBAAUH,YAAYG,QAJJ;AAKlBa,eAAOjB,YAAYiB,KALD;AAMlBC,cAAMlB,YAAYkB,IANA;AAOlBC,cAAM;AAPY,OAApB;AASA,WAAKpB,SAAL,CAAeqB,IAAf,CAAoBX,WAApB;AACA,aAAOA,WAAP;AACD;;;0BAEKY,qB,EAAuB;AAC3B,aAAO,KAAKtB,SAAL,CAAeuB,IAAf,CAAoB;AAAA,eAAYC,SAASb,UAAT,KAAwBW,qBAApC;AAAA,OAApB,CAAP;AACD;;;kCAEaX,U,EAAY;AACxB;AACA,UAAMc,qBAAqB,KAAKC,KAAL,CAAWf,UAAX,CAA3B;AACAc,yBAAmBL,IAAnB,IAA2B,CAA3B;AACA,aAAOK,kBAAP;AACD;;;oCAEed,U,EAAY;AAC1B;AACA,UAAMgB,uBAAuB,KAAKD,KAAL,CAAWf,UAAX,CAA7B;AACAgB,2BAAqBP,IAArB,IAA6B,CAA7B;AACA,aAAOO,oBAAP;AACD;;;;;;kBAGY,IAAI5B,QAAJ,E","file":"questionsModels.js","sourcesContent":["import moment from 'moment';\r\nimport uuid from 'uuid';\r\nimport userModel from './usersModels';\r\nimport meetupsModels from './meetupsModels';\r\n\r\n\r\nclass Question {\r\n  constructor() {\r\n    this.questions = [];\r\n  }\r\n\r\n  askQuestion(requestBody) {\r\n    const meetupExist = meetupsModels.getOne(requestBody.meetupId);\r\n    const userExist = userModel.findUser(requestBody.userId);\r\n    const theQuestion = {\r\n      questionId: uuid.v4(),\r\n      createdOn: moment.now(),\r\n      createdBy: userExist.userId,\r\n      meetupId: meetupExist.meetupId,\r\n      title: requestBody.title,\r\n      body: requestBody.body,\r\n      vote: 0,\r\n    };\r\n    this.questions.push(theQuestion);\r\n    return theQuestion;\r\n  }\r\n\r\n  findQ(idOfRequestedQuestion) {\r\n    return this.questions.find(question => question.questionId === idOfRequestedQuestion);\r\n  }\r\n\r\n  requestUpvote(questionId) {\r\n    // does the question exist\r\n    const theUpvotedQuestion = this.findQ(questionId);\r\n    theUpvotedQuestion.vote += 1;\r\n    return theUpvotedQuestion;\r\n  }\r\n\r\n  requestDownvote(questionId) {\r\n    // does the question exist\r\n    const theDownvotedQuestion = this.findQ(questionId);\r\n    theDownvotedQuestion.vote -= 1;\r\n    return theDownvotedQuestion;\r\n  }\r\n}\r\n\r\nexport default new Question();\r\n"]}